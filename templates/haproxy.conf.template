# This is the default haproxy load balancing configuration. It uses will
# load balance four ZEO clients.
#
# Note that balancer.conf is generated from balancer.conf.template.
#

global
  log ${host:syslog} local6

  # We manage this with supervisor
  #  user ${user:balancer}

  maxconn  1024
  ulimit-n 65536

  nbproc 1

  # Run in non-daemon mode so that supervisor can keep control
  #  daemon

defaults
  # log global
  mode http

  # The zope instances have maxconn 1, and it is important that
  # unused/idle connections are closed as soon as possible.
  option httpclose

  # Remove requests from the queue if people press stop button
  option abortonclose

  #  option httplog
  #  option dontlognull
  retries 3
  option redispatch
  monitor-uri /haproxy-ping

  timeout connect 7s
  timeout queue   15s
  timeout client  300s
  timeout server  300s

  stats enable
  stats uri /_balancer_status_
  stats refresh 5s
  stats realm Haproxy\ statistics

frontend zopecluster
  bind ${host:balancer}:${port:balancer}
  default_backend zope

  capture cookie __ac len 10
  option httplog
  log ${host:syslog} local6

# Load balancing over the zope instances

backend zope

  appsession __ac len 32 timeout 1d
  balance roundrobin
  cookie SERVERID insert indirect
  #cookie serverid
  option httpchk GET /

  server  zope0101 ${host:instance1}:${port:instance1} cookie z0101 check maxconn 2 maxqueue 50
  server  zope0102 ${host:instance2}:${port:instance2} cookie z0102 check maxconn 2 maxqueue 50
  server  zope0103 ${host:instance3}:${port:instance3} cookie z0103 check maxconn 2 maxqueue 50
  server  zope0104 ${host:instance4}:${port:instance4} cookie z0104 check maxconn 2 maxqueue 50
